using Evect.Models.DB;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;

namespace Evect.Models.Commands
{
    public class CommandHandler
    {

        [TelegramCommand("/start")]
        public async void OnStart(Message message, TelegramBotClient client)
        {
            long chatId = message.Chat.Id;
            UserDB db = new UserDB();
            if (!await db.IsUserExists(chatId))
            {
                db.AddUser(chatId);
            }
            else if (!await db.IsUserExistsAndAuthed(chatId))
            {
                db.UserLogin(chatId);
                await client.SendTextMessageAsync(chatId, "–ú—ã —Ä–∞–¥—ã –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å", ParseMode.Html);
            }
            else
            {
                await client.SendTextMessageAsync(chatId, "–ú—ã –≤–∞—Å —É–∂–µ –∑–Ω–∞–µ–º", ParseMode.Html);
            }

            string[][] actions = { new[] { "–í–æ–π—Ç–∏ –ø–æ –∏–≤–µ–Ω—Ç-–∫–æ–¥—É" }, new[] { "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" } };
            await client.SendTextMessageAsync(chatId, "–ß—É–¥–Ω–µ–Ω—å–∫–æ " + "üòá" + " –ú–æ–∂–µ–º –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å", ParseMode.Markdown);
            await client.SendTextMessageAsync(chatId, "–£ –≤–∞—Å –µ—Å—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç? –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –≤–æ–π–¥–∏—Ç–µ –ø–æ <b>–∏–≤–µ–Ω—Ç-–∫–æ–¥—É</b> \n P.S.<b>–ò–≤–µ–Ω—Ç-–∫–æ–¥</b> –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø–∏—Å—å–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", ParseMode.Html, replyMarkup: TelegramKeyboard.GetKeyboard(actions));

        }


        [TelegramCommand("/stop")]
        public async void OnStop(Message message, TelegramBotClient client)
        {
            long chatId = message.Chat.Id;

            UserDB db = new UserDB();
            User user = await db.GetUserByChatId(chatId);

            if (await db.IsUserExistsAndAuthed(chatId))
            {
                if (user.CurrentAction != Actions.DeleteOrNot)
                {
                    string[][] actions = { new[] { "–î–∞" }, new[] { "–ù–µ—Ç" } };
                    await client.SendTextMessageAsync(chatId, "<b>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</b> –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ <b>–ø–æ–ª–Ω–æ—Å—å—é —É–¥–∞–ª–∏—Ç—å</b>",
                        ParseMode.Html,
                        replyMarkup: TelegramKeyboard.GetKeyboard(actions, true));

                    db.ChangeUserAction(chatId, Actions.DeleteOrNot);
                }

            }
        }

        [TelegramCommand("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")]
        public async void OnProfile(Message message, TelegramBotClient client)
        {
            long chatId = message.Chat.Id;
            UserDB db = new UserDB();
            db.ChangeUserAction(chatId, Actions.Profile);
            string[][] actions = { new[] { "–û –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏" }, new[] {"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—é"} };
            await client.SendTextMessageAsync(chatId, "–ß—Ç–æ –Ω—É–∂–Ω–æ?",ParseMode.Html,replyMarkup:TelegramKeyboard.GetKeyboard(actions, true));
        }


        [TelegramCommand("–í–æ–π—Ç–∏ –ø–æ –∏–≤–µ–Ω—Ç-–∫–æ–¥—É")]
        public async void OnEnteringByCode(Message message, TelegramBotClient client)
        {
            long chatId = message.Chat.Id;
            UserDB userDb = new UserDB();
            userDb.ChangeUserAction(chatId, Actions.WaitingForEventCode);
        }

        [TelegramCommand("–û–± –∏–≤–µ–Ω—Ç–µ")]
        public async void InformationAboutEventForAdmin(Message message, TelegramBotClient client)
        {
            EventDB eventDB = new EventDB();
            long chatId = message.Chat.Id;

            UserDB userDb = new UserDB();
            User user = await userDb.GetUserByChatId(chatId);
            if (!user.IsAdminAuthorized)
            {
                await client.SendTextMessageAsync(chatId, "–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞");

            }
            else
            {
                string[][] back = { new[] { "–ù–∞–∑–∞–¥" } };
                userDb.ChangeUserAction(chatId, Actions.GetInformationAboutTheEvent);
                string info = await eventDB.GetInformationAboutEvent(chatId);
                await client.SendTextMessageAsync(chatId, info, replyMarkup: TelegramKeyboard.GetKeyboard(back));

            }


        }
        /*[TelegramCommand("–ù–∞–∑–∞–¥")]

        [TelegramCommand("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö")]
        [TelegramCommand("–°–æ–∑–¥–∞—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ")]
        [TelegramCommand("–û–ø—Ä–æ—Å")]*/


    } 
}