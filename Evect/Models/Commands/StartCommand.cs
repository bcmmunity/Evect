using System.Threading.Tasks;
using Evect.Models.DB;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;

namespace Evect.Models.Commands
{
    public class StartCommand : BaseCommand
    {
        public override string Name { get; } = "/start";
        public override async Task Execute(Message message, TelegramBotClient client)
        {
            long chatId = message.Chat.Id;
            UserDB db = new UserDB();
            if (!await db.IsUserExists(chatId))
            {
                db.AddUser(chatId);
            }
            else if (!await db.IsUserExistsAndAuthed(chatId))
            {
                db.UserLogin(chatId);
                await client.SendTextMessageAsync(chatId, "–ú—ã —Ä–∞–¥—ã –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å", ParseMode.Html);
            }
            else
            {
                await client.SendTextMessageAsync(chatId, "–ú—ã –≤–∞—Å —É–∂–µ –∑–Ω–∞–µ–º", ParseMode.Html);
            }
            
            string[][] actions = { new[] { "–í–æ–π—Ç–∏ –ø–æ –∏–≤–µ–Ω—Ç-–∫–æ–¥—É" }, new[] {"–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"} };
            await client.SendTextMessageAsync(chatId, "–ß—É–¥–Ω–µ–Ω—å–∫–æ "+"üòá"+" –ú–æ–∂–µ–º –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å", ParseMode.Markdown);
            await client.SendTextMessageAsync(chatId, "–£ –≤–∞—Å –µ—Å—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç? –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –≤–æ–π–¥–∏—Ç–µ –ø–æ <b>–∏–≤–µ–Ω—Ç-–∫–æ–¥—É</b> \n P.S.<b>–ò–≤–µ–Ω—Ç-–∫–æ–¥</b> –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø–∏—Å—å–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",ParseMode.Html,replyMarkup:TelegramKeyboard.GetKeyboard(actions));
            
        }

        
    }
}